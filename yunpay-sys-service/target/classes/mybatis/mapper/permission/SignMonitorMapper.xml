<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunpay.permission.dao.impl.SignMonitorDaoImpl">
	<!-- 查询的sql条件 -->
	<sql id="tsys_area_code">TSYS_AREA_CODE</sql>
	
	<sql id="condition_sql">
		<if test="storeName != null and storeName != ''"> and ss.store_name like CONCAT(CONCAT('%', #{storeName}), '%')</if>
		<if test="termId != null and termId != ''"> and t1.term_id = #{termId}</if>
		<if test="termSeq != null and termSeq != ''"> and t1.term_seq = #{termSeq}</if>
		<if test="date1 != null and date1 != ''"> and to_date(t1.tran_date,'yyyy-MM-dd') &gt;(to_date(#{date1},'yyyy-MM-dd')-1)</if>
		<if test="date2 != null and date2 != ''"> and to_date(t1.tran_date,'yyyy-MM-dd') &lt;(to_date(#{date2},'yyyy-MM-dd')+1)</if>
	</sql>
	
	<!-- 分页查询 -->
	<select id="listPage" parameterType="java.util.Map" resultType="com.yunpay.permission.entity.SignMonitor">
		select * from (
			select rownum rowno,(t1.tran_date || t1.tran_time) as tranDate,t1.tran_time as tranTime,t1.batch_no as batchNo,
			t1.merch_id as merchId,t1.term_id as termId,t1.term_seq as termSeq, t1.progreame_ver as progreameVer,
			t1.unionpay_cer as unionpayCer, t1.operator_id as operatorId,t1.esamcard as esamCard,
			t1.blacklist_ver as blacklistVer, t1.far_ver as farVer,t1.par_ver as parVer,t1.obligate1,
			t1.obligate2,t1.pos_serial as posSerial, t1.posp_serial pospSerial,t1.record_status as recordStatus,
			t1.update_time as updateTime,  ss.store_id as storeNo,ss.store_name as storeName,
			t1.discount_scale as discountScale from SD_LOGIN_RECORD t1  
			right join (select term_seq,max(update_time) as update_time 
			from SD_LOGIN_RECORD group by term_seq) t2  on t1.term_seq = t2.term_seq and
			t1.update_time = t2.update_time  left join sd_merch_term smt on smt.term_seq = t1.term_seq 
			left join sd_store ss on ss.store_id = smt.store_id 
           <where>
           		<include refid="condition_sql"/>
           </where> 
           order by t1.tran_date desc,t1.tran_time desc) where rowno between #{startRowNum} and #{endRowNum}
	</select>
	
	<select id="listPageCount" parameterType="java.util.Map" resultType="Long">
		select count(1) from (
			select t1.tran_date as tranDate,t1.tran_time as tranTime,t1.batch_no as batchNo,
			t1.merch_id as merchId,t1.term_id as termId,t1.term_seq as termSeq, t1.progreame_ver as progreameVer,
			t1.unionpay_cer as unionpayCer, t1.operator_id as operatorId,t1.esamcard as esamCard,
			t1.blacklist_ver as blacklistVer, t1.far_ver as farVer,t1.par_ver as parVer,t1.obligate1,
			t1.obligate2,t1.pos_serial as posSerial, t1.posp_serial pospSerial,t1.record_status as recordStatus,
			t1.update_time as updateTime,  ss.store_id as storeNo,ss.store_name as storeName,
			t1.discount_scale as discountScale from SD_LOGIN_RECORD t1  
			right join (select term_seq,max(update_time) as update_time 
			from SD_LOGIN_RECORD group by term_seq) t2  on t1.term_seq = t2.term_seq and
			t1.update_time = t2.update_time  left join sd_merch_term smt on smt.term_seq = t1.term_seq 
			left join sd_store ss on ss.store_id = smt.store_id 
           <where>
           		<include refid="condition_sql"/>
           </where>)
	</select>
	
	<!-- 根据id查询 -->
	<select id="getFeedBackById" parameterType="java.util.Map" resultType="com.yunpay.permission.entity.FeedBack">
		select ss.sss_id as sssId,ss.store_id as merchId, ss.quest_type as questType,ss.quest_desc as questDesc,ss.solve_desc as solveDesc,
 			 ss.solve_user as solveUser,ss.solve_time as solveTime,ss.solve_status as solveStatus,sm.register_name as merchName,
 			 sm.linkman1 as linkMan1,sm.linktel as linkTel from sd_store_solverecord ss left join sd_merch_base_info sm on ss.store_id = sm.merch_id
		 where sss_id = #{sssId}
	</select>

	<select id="listPageSignView" parameterType="java.util.Map" resultType="com.yunpay.permission.entity.SignMonitor">	
		select * from (
			select rownum rowno,(t1.tran_date ||t1.tran_time) as tranDate,t1.tran_time as tranTime,t1.batch_no as batchNo,  t1.merch_id as merchId,
		 		t1.term_id as termId,t1.term_seq as termSeq, t1.progreame_ver as progreameVer,t1.unionpay_cer as unionpayCer,
		 		t1.operator_id as operatorId,t1.esamcard as esamCard,t1.blacklist_ver as blacklistVer, t1.far_ver as farVer,
		 		t1.par_ver as parVer,t1.obligate1,t1.obligate2,t1.pos_serial as posSerial, t1.posp_serial pospSerial,
		 		t1.record_status as recordStatus,t1.update_time as updateTime, ss.store_id as storeNo,ss.store_name as storeName,
		 		t1.discount_scale as discountScale from SD_LOGIN_RECORD t1 left join sd_merch_term smt on smt.term_seq = t1.term_seq
		 		left join sd_store ss on ss.store_id = smt.store_id  
			<where>
	           		<include refid="condition_sql"/>
	           </where> 
	           order by t1.tran_date desc) where rowno between #{startRowNum} and #{endRowNum}
	</select>
	
	<select id="listPageCountSignView" parameterType="java.util.Map" resultType="Long">
		select count(1) from (
			select (t1.tran_date ||t1.tran_time) as tranDate,t1.tran_time as tranTime,t1.batch_no as batchNo,  t1.merch_id as merchId,
		 		t1.term_id as termId,t1.term_seq as termSeq, t1.progreame_ver as progreameVer,t1.unionpay_cer as unionpayCer,
		 		t1.operator_id as operatorId,t1.esamcard as esamCard,t1.blacklist_ver as blacklistVer, t1.far_ver as farVer,
		 		t1.par_ver as parVer,t1.obligate1,t1.obligate2,t1.pos_serial as posSerial, t1.posp_serial pospSerial,
		 		t1.record_status as recordStatus,t1.update_time as updateTime, ss.store_id as storeNo,ss.store_name as storeName,
		 		t1.discount_scale as discountScale from SD_LOGIN_RECORD t1 left join sd_merch_term smt on smt.term_seq = t1.term_seq
		 		left join sd_store ss on ss.store_id = smt.store_id  
			<where>
	           		<include refid="condition_sql"/>
	           </where>)
	</select>
	
</mapper>