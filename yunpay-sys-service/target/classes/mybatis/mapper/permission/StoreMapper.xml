<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunpay.permission.dao.impl.StoreDaoImpl">
	<sql id="selectfield"> 
		s.id,s.userName,s.storeName,s.storeNo,s.porgNo,s.prov,s.provName,s.city,s.cityName,s.area,s.areaName,s.address,
		s.tel,s.merchantNo,s.serialNo,s.contactMan,s.mainImage,s.auditImages,s.mail,s.status,s.apprStatus,s.apprRemark,
		s.createdAt,s.createdBy,s.updatedAt,s.updatedBy,s.informationSources,m.registerName
	</sql>
				    
    <sql id="condition_sql">
    	1=1    	              
        <if test="storeName != null and storeName != ''"> and s.storeName like CONCAT(CONCAT('%', #{storeName}), '%')</if>
        <if test="registerName != null and registerName != ''"> and m.registerName like CONCAT(CONCAT('%', #{registerName}), '%')</if>
        <if test="contactMan!= null and contactMan != ''">  and s.contactMan like CONCAT(CONCAT('%', #{contactMan}), '%')</if>
        <if test="tel!= null and tel != ''">  and s.tel like CONCAT(CONCAT('%', #{tel}), '%')</if>
        <if test="provName!= null and provName != ''">  and s.provName=#{provName}</if>
        <if test="cityName!= null and cityName != ''">  and s.cityName=#{cityName}</if>
        <if test="areaName!= null and areaName != ''">  and s.areaName=#{areaName}</if>
 	</sql>  
    
        <!-- 门店 分页 -->
    <select id="listPage" parameterType="java.util.Map" resultType="com.yunpay.permission.entity.StoreEntity">
        select 
		<include refid="selectfield" />
        from 
        t_store s left join t_merchant m 
		on s.serialNo=m.serialNo             
        <where>
        	<include refid="condition_sql" />                
        </where>        
        order by storeNo 
    </select>
        
    <!-- 统计门店条数 -->
    <select id="listPageCount" parameterType="java.util.Map" resultType="Integer">
    
		select count(1) from
		t_store s left join t_merchant m 
		on s.serialNo=m.serialNo
		<where>
			<include refid="condition_sql" />
		</where>
    </select>
    
    <!-- 查询所有门店  -->
    <select id="getStoreList" parameterType="com.yunpay.permission.entity.StoreEntity" resultType="com.yunpay.permission.entity.StoreEntity">
        select 
		<include refid="selectfield" />
        from 
        t_store s left join t_merchant m 
		on s.serialNo=m.serialNo               
        order by storeNo
    </select>
    
    <!-- 门店 根据storeNo查 -->
    <select id="selectByStoreNo" parameterType="String" resultType="com.yunpay.permission.entity.StoreEntity">
        select 
		<include refid="selectfield" />
        from 
        t_store s left join t_merchant m 
		on s.serialNo=m.serialNo                   
        where
        	storeNo=${storeNo}        
        order by storeNo
    </select>
    
    <!-- 门店 根据storeNo删除 -->
    <delete id="deleteByStoreNo" parameterType="String">
        delete from t_store
        where storeNo = ${storeNo}
    </delete>  
        
    <!-- 修改状态码 -->
    <update id="updateStoreStatus" parameterType="Integer">
        update t_store
        <set> status = #{status} </set> 
        where id = #{id}
    </update>
    
    <!-- 修改门店信息 -->
    <update id="updateStoreInfo" parameterType="com.yunpay.permission.entity.StoreEntity">
        update t_store
        <set>
            storeName = #{storeName,jdbcType=VARCHAR},
			prov = #{prov,jdbcType=VARCHAR},
			provName = #{provName,jdbcType=VARCHAR},
			city = #{city,jdbcType=VARCHAR},
			cityName = #{cityName,jdbcType=VARCHAR},
			area = #{area,jdbcType=VARCHAR},
			areaName = #{areaName,jdbcType=VARCHAR},
			address = #{address,jdbcType=VARCHAR},
			tel = #{tel,jdbcType=VARCHAR},
			contactMan = #{contactMan,jdbcType=VARCHAR},
			mail= #{mail,jdbcType=VARCHAR},
			updatedAt = #{updatedAt,jdbcType=DATE},
			updatedBy = #{updatedBy,jdbcType=VARCHAR}
        </set>
        where storeNo = #{storeNo }
    </update>

    <!-- 新增门店信息 -->
    <insert id="addStoreInfo" parameterType="com.yunpay.permission.entity.StoreEntity">
        insert into t_store
			(storeNo,
			storeName,
			prov,
			provName,
			city,
			cityName,
			area,
			areaName,
			address,
			tel,
			merchantNo,
			serialNo,
			contactMan,
			mainImage,
			auditImages,
			mail,
			status,
			apprStatus,
			apprRemark,
			createdAt,
			createdBy,
			updatedAt,
			updatedBy,			
			informationSources) values
			(#{storeNo,jdbcType=VARCHAR},
			#{storeName,jdbcType=VARCHAR},
			#{prov,jdbcType=VARCHAR},
			#{provName,jdbcType=VARCHAR},
			#{city,jdbcType=VARCHAR} ,
			#{cityName,jdbcType=VARCHAR} ,
			#{area,jdbcType=VARCHAR} ,
			#{areaName,jdbcType=VARCHAR},
			#{address,jdbcType=VARCHAR},
			#{tel,jdbcType=VARCHAR},
			#{merchantNo,jdbcType=VARCHAR},
			#{serialNo,jdbcType=VARCHAR},
			#{contactMan,jdbcType=VARCHAR},
			#{mainImage,jdbcType=VARCHAR},
			#{auditImages,jdbcType=VARCHAR},
			#{mail,jdbcType=VARCHAR},
			#{status,jdbcType=INTEGER},
			#{apprStatus,jdbcType=INTEGER},
			#{apprRemark,jdbcType=VARCHAR},
			#{createdAt,jdbcType=DATE},
			#{createdBy,jdbcType=VARCHAR},			
			#{informationSources,jdbcType=INTEGER})
    </insert>
    
 </mapper>
